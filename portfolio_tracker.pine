//@version=6
indicator("Portfolio Tracker", shorttitle="Tracker", overlay=true)

// --- ⚙️ SETTINGS ---
string ticker1_id = input.string("BATS:AMZN", title="1. Ticker ID")
float  ticker1_cost = input.float(183.41, title="   Avg. Cost")

string ticker2_id = input.string("TSX_DLY:BN", title="2. Ticker ID")
float  ticker2_cost = input.float(54.24, title="   Avg. Cost")

string ticker3_id = input.string("BATS:GOOG", title="3. Ticker ID")
float  ticker3_cost = input.float(149.78, title="   Avg. Cost")

string ticker4_id = input.string("BATS:ASML", title="4. Ticker ID (US)")
float  ticker4_cost = input.float(719.78, title="   Avg. Cost")

string ticker5_id = input.string("BATS:BABA", title="5. Ticker ID")
float  ticker5_cost = input.float(83.71, title="   Avg. Cost")

string ticker6_id = input.string("BATS:MELI", title="6. Ticker ID")
float  ticker6_cost = input.float(2101.00, title="   Avg. Cost")

string ticker7_id = input.string("BATS:SPGI", title="7. Ticker ID")
float  ticker7_cost = input.float(495.27, title="   Avg. Cost")

string ticker8_id = input.string("EURONEXT_DLY:ASML", title="8. Ticker ID (Euronext)")
float  ticker8_cost = input.float(606.21, title="   Avg. Cost")

string ticker9_id = input.string("OTC_DLY:EVVTY", title="9. Ticker ID")
float  ticker9_cost = input.float(79.35, title="   Avg. Cost")

string ticker10_id = input.string("BATS:BN", title="10. Ticker ID (US)")
float  ticker10_cost = input.float(23.11, title="   Avg. Cost")

string ticker11_id = input.string("BATS:SPLG", title="11. Ticker ID")
float  ticker11_cost = input.float(52.21, title="   Avg. Cost")

string ticker12_id = input.string("BATS:DUOL", title="12. Ticker ID")
float  ticker12_cost = input.float(280.74, title="   Avg. Cost")

string ticker13_id = input.string("BATS:EFX", title="13. Ticker ID")
float  ticker13_cost = input.float(236.76, title="   Avg. Cost")

string ticker14_id = input.string("BATS:BIDU", title="14. Ticker ID")
float  ticker14_cost = input.float(92.92, title="   Avg. Cost")

string ticker15_id = input.string("BATS:ADBE", title="15. Ticker ID")
float  ticker15_cost = input.float(333.03, title="   Avg. Cost")

string ticker16_id = input.string("BATS:BRK.B", title="16. Ticker ID")
float  ticker16_cost = input.float(332.02, title="   Avg. Cost")

string ticker17_id = input.string("BATS:MSCI", title="17. Ticker ID")
float  ticker17_cost = input.float(532.42, title="   Avg. Cost")

string ticker18_id = input.string("BATS:SCHG", title="18. Ticker ID")
float  ticker18_cost = input.float(25.14, title="   Avg. Cost")

string ticker19_id = input.string("EURONEXT_DLY:CSPX", title="19. Ticker ID")
float  ticker19_cost = input.float(568.19, title="   Avg. Cost")

string ticker20_id = input.string("BATS:CRM", title="20. Ticker ID")
float  ticker20_cost = input.float(245.00, title="   Avg. Cost")

string ticker21_id = input.string("EURONEXT_DLY:WPEA", title="21. Ticker ID")
float  ticker21_cost = input.float(4.85, title="   Avg. Cost")

string ticker22_id = input.string("EURONEXT_DLY:IWDA", title="22. Ticker ID")
float  ticker22_cost = input.float(108.85, title="   Avg. Cost")

// --- 🧠 LOGIC ---
string currentTicker = syminfo.tickerid
float avgCost = na

// This block checks your inputs to find a match for the current chart
if str.contains(currentTicker, ticker1_id) and ticker1_id != ""
    avgCost := ticker1_cost
else if str.contains(currentTicker, ticker2_id) and ticker2_id != ""
    avgCost := ticker2_cost
else if str.contains(currentTicker, ticker3_id) and ticker3_id != ""
    avgCost := ticker3_cost
else if str.contains(currentTicker, ticker4_id) and ticker4_id != ""
    avgCost := ticker4_cost
else if str.contains(currentTicker, ticker5_id) and ticker5_id != ""
    avgCost := ticker5_cost
else if str.contains(currentTicker, ticker6_id) and ticker6_id != ""
    avgCost := ticker6_cost
else if str.contains(currentTicker, ticker7_id) and ticker7_id != ""
    avgCost := ticker7_cost
else if str.contains(currentTicker, ticker8_id) and ticker8_id != ""
    avgCost := ticker8_cost
else if str.contains(currentTicker, ticker9_id) and ticker9_id != ""
    avgCost := ticker9_cost
else if str.contains(currentTicker, ticker10_id) and ticker10_id != ""
    avgCost := ticker10_cost
else if str.contains(currentTicker, ticker11_id) and ticker11_id != ""
    avgCost := ticker11_cost
else if str.contains(currentTicker, ticker12_id) and ticker12_id != ""
    avgCost := ticker12_cost
else if str.contains(currentTicker, ticker13_id) and ticker13_id != ""
    avgCost := ticker13_cost
else if str.contains(currentTicker, ticker14_id) and ticker14_id != ""
    avgCost := ticker14_cost
else if str.contains(currentTicker, ticker15_id) and ticker15_id != ""
    avgCost := ticker15_cost
else if str.contains(currentTicker, ticker16_id) and ticker16_id != ""
    avgCost := ticker16_cost
else if str.contains(currentTicker, ticker17_id) and ticker17_id != ""
    avgCost := ticker17_cost
else if str.contains(currentTicker, ticker18_id) and ticker18_id != ""
    avgCost := ticker18_cost
else if str.contains(currentTicker, ticker19_id) and ticker19_id != ""
    avgCost := ticker19_cost
else if str.contains(currentTicker, ticker20_id) and ticker20_id != ""
    avgCost := ticker20_cost
else if str.contains(currentTicker, ticker21_id) and ticker21_id != ""
    avgCost := ticker21_cost
else if str.contains(currentTicker, ticker22_id) and ticker22_id != ""
    avgCost := ticker22_cost
    
// --- DRAWING THE LINE ---
plot(series=avgCost, title="Average Cost", color=color.green, linewidth=2, style=plot.style_line, trackprice=true)

// --- LABEL LOGIC ---
var label percentLabel = na

if barstate.islast and not na(avgCost)
    float percent_diff = (close - avgCost) / avgCost * 100
    string sign = percent_diff >= 0 ? "+" : ""
    string labelText = sign + str.tostring(percent_diff, '#.##') + "%"
    
    if na(percentLabel)
        // CORRECTED: Changed y=close to y=avgCost
        percentLabel := label.new(x=timenow, y=avgCost, text=labelText, xloc=xloc.bar_time, yloc=yloc.price, style=label.style_label_left, color=color.new(color.green, 25), textcolor=color.white, size=size.large)
    else
        // CORRECTED: Changed the y-position to avgCost
        percentLabel.set_xy(timenow, avgCost)
        percentLabel.set_text(labelText)
else
    if not na(percentLabel)
        percentLabel.delete()
        percentLabel := na
